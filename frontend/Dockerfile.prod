# Production Dockerfile for VibeTravels Frontend - Render Platform
# Optimized for Render deployment

# Stage 1: Build Vue.js application
FROM node:22-alpine AS builder

# Accept build arguments for environment variables
ARG VITE_API_BASE_URL
ARG VITE_ENVIRONMENT
ARG VITE_API_TIMEOUT
ARG VITE_DEV_TOOLS

# Set environment variables from build args
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV VITE_ENVIRONMENT=$VITE_ENVIRONMENT
ENV VITE_API_TIMEOUT=$VITE_API_TIMEOUT
ENV VITE_DEV_TOOLS=$VITE_DEV_TOOLS

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package.json package-lock.json* ./

# Install ALL dependencies (including devDependencies needed for build)
RUN npm ci --only=production=false --silent

# Copy source code and configuration files
COPY . .

# Build the application for production
RUN npm run build

# Stage 2: Production runtime with Nginx
FROM nginx:1.27-alpine

# Create non-root user for security
RUN addgroup -S appgroup && \
    adduser -S appuser -G appgroup

# Copy built static files from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx-render.conf /etc/nginx/conf.d/default.conf.template

# Create necessary directories and set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run /etc/nginx/conf.d && \
    chown -R appuser:appgroup /var/cache/nginx /var/log/nginx /var/run /usr/share/nginx/html /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown appuser:appgroup /var/run/nginx.pid

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-10000}/ || exit 1

# Switch to non-root user
USER appuser

# Set default port for both Docker and Render
ENV PORT=10000

# Expose the PORT
EXPOSE $PORT

# Start nginx with environment variable substitution
CMD ["sh", "-c", "envsubst '$PORT' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
