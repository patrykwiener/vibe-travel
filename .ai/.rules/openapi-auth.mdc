---
description:
globs:
alwaysApply: false
---
# OpenAPI Auth Integration

Use this guide to introduce authentication (sign-up & sign-in) in Vue.js applications with server-side rendering (SSR) support

## Before we start

VERY IMPORTANT: Ask me which pages or components should behave differently after introducing authentication. Adjust further steps accordingly.

## Core Requirements

1. Use `/src/client` package that is library generated from the OpenAPI spec
2. Use ONLY `getAll` and `setAll` for cookie management
3. NEVER use individual `get`, `set`, or `remove` cookie methods
4. Implement proper session management with middleware based on JWT


## Environment Variables

Create `.env` file with required backend credentials (based on the snippet below or `.env.example` in project root)

```env
BACKEND_URL=your_project_url
JWT_SECRET=your_jwt_secret
```

For better TypeScript support, create or update `src/env.d.ts`:

```typescript
interface ImportMetaEnv {
  readonly BACKEND_URL: string;
  readonly JWT_SECRET: string;
  // Add other environment variables as needed
}

interface ImportMeta {
  readonly env: ImportMetaEnv;
}
```
When introducing new env variables or values stored, always update `src/env.d.ts` to reflect these changes.

Make sure `.env.example` is updated with the correct environment variables.

## Implementation Steps

Prerequisites: Backend API endpoints for authentication (login, register, logout) are already implemented and accessible.
### 1. Implement OR Extend Authentication Middleware

Update existing auth middleware or create one in `src/middleware/index.ts`:

### 2 Router is already set up in `src/router/index.ts` but ensure it includes the auth middleware and is properly configured to handle authentication.

### 5. Verify SSR Configuration

Verify whether auth pages are rendered server-side, either by `export const prerender = false;` or by `output: "server"` in `astro.config.mjs`.

## Security Best Practices

- Set proper cookie options (httpOnly, secure, sameSite)
- Never expose Supabase integration & keys in client-side components
- Validate all user input server-side
- Use proper error handling and logging

## Common Pitfalls

1. DO NOT use individual cookie methods (get/set/remove)
2. DO NOT import from @supabase/auth-helpers-nextjs
3. DO NOT skip the auth.getUser() call in middleware
4. DO NOT modify cookie handling logic
5. Always handle auth state changes properly
